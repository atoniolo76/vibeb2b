#!/usr/bin/env python3
"""
RTMP SETUP GUIDE FOR EMOTION DETECTION
Complete instructions for setting up RTMP streaming
"""

print("🎬 RTMP STREAMING SETUP FOR EMOTION DETECTION")
print("=" * 60)
print()

print("🎯 OVERVIEW:")
print("RTMP (Real-Time Messaging Protocol) streams video in real-time")
print("Much better than Google Meet bots for emotion detection")
print("720p 30fps with consistent low latency")
print()

print("🛠️ OPTION 1: OBS STUDIO (RECOMMENDED)")
print("=" * 40)
print()
print("1. Download OBS Studio: https://obsproject.com")
print("2. Install and open OBS Studio")
print("3. Go to Settings → Stream")
print("4. Set Service to: Custom")
print("5. Set Server to: rtmp://localhost/live")
print("6. Set Stream Key to: stream")
print("7. Click OK")
print()
print("8. In OBS, add your video source (webcam/screen capture)")
print("9. Click 'Start Streaming' in OBS")
print()
print("10. Test connection:")
print("    POST to: http://localhost:5000/connect_rtmp")
print("    Body: {\"rtmp_url\": \"rtmp://localhost/live/stream\"}")
print()

print("🛠️ OPTION 2: STREAMLABS OBS")
print("=" * 40)
print()
print("1. Download Streamlabs OBS")
print("2. Same settings as OBS Studio above")
print("3. Streamlabs has better performance for streaming")
print()

print("🛠️ OPTION 3: FFMPEG (COMMAND LINE)")
print("=" * 40)
print()
print("# Stream webcam:")
print("ffmpeg -f v4l2 -i /dev/video0 -c:v libx264 -preset veryfast -maxrate 3000k -bufsize 6000k -vf \"format=yuv420p\" -g 50 -c:a aac -b:a 160k -ac 2 -ar 44100 -f flv rtmp://localhost/live/stream")
print()
print("# Stream screen (Linux):")
print("ffmpeg -f x11grab -i :0.0 -c:v libx264 -preset veryfast -maxrate 3000k -bufsize 6000k -vf \"format=yuv420p\" -g 50 -f flv rtmp://localhost/live/stream")
print()

print("🧪 TESTING YOUR RTMP SETUP")
print("=" * 40)
print()
print("1. Start your RTMP server:")
print("   python rtmp_emotion_server.py")
print()
print("2. Start streaming from OBS")
print()
print("3. Test connection:")
print("   curl -X POST http://localhost:5000/connect_rtmp \\")
print("        -H \"Content-Type: application/json\" \\")
print("        -d '{\"rtmp_url\": \"rtmp://localhost/live/stream\"}'")
print()
print("4. Check if connected:")
print("   curl http://localhost:5000/health")
print("   # Should show: \"rtmp_connected\": true")
print()
print("5. Get emotion data:")
print("   curl http://localhost:5000/get_metrics")
print()

print("🎯 TROUBLESHOOTING")
print("=" * 40)
print()
print("❌ 'Failed to connect to RTMP stream'")
print("   → Make sure OBS is streaming first")
print("   → Check RTMP URL format")
print("   → Verify firewall allows port 1935")
print()
print("❌ No frames received")
print("   → Check OBS streaming status")
print("   → Verify RTMP URL matches OBS settings")
print("   → Try restarting OBS stream")
print()
print("❌ Poor quality/low FPS")
print("   → Increase bitrate in OBS settings")
print("   → Check internet connection")
print("   → Reduce resolution if needed")
print()

print("✅ SUCCESS INDICATORS")
print("=" * 40)
print()
print("🎉 Connected: \"rtmp_connected\": true")
print("🎬 Frames: frames_received > 0")
print("🤖 Emotions: Non-zero frustration/engagement values")
print("⚡ Real-time: Consistent 30 FPS")
print()

print("🚀 RTMP gives you professional streaming quality!")
print("No more 15-second delays or corrupted frames!")
